const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

module.exports = {
  data: {
    name: '!Zombie',
    description: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå Zombie ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡πà‡∏°!',
  },

  async execute(message) {
    const user = message.author;
    const embed = createEmbed();

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ
    const [firstRow, secondRow] = createButtonRows();

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°
    const selectionMessage = await message.channel.send({
      embeds: [embed],
      components: [firstRow, secondRow],
      ephemeral: true,
    });

    // ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°
    const filter = (i) => i.user.id === user.id;
    const collector = selectionMessage.createMessageComponentCollector({ filter, time: 15000 });

    collector.on('collect', async (i) => {
      await i.deferUpdate();

      if (i.customId === 'cancel') {
        return collector.stop('cancelled');
      }

      const selectedZombie = getSelectedZombie(i.customId);
      if (!selectedZombie) return;

      collector.stop();
      await startBattle(message, user, selectedZombie);
    });

    collector.on('end', (collected, reason) => {
      if (reason === 'cancelled') {
        selectionMessage.edit({
          embeds: [embed.setDescription('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å!')],
          components: [],
        });
      } else {
        selectionMessage.edit({ components: [] });
      }
    });
  },
};

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
function createEmbed() {
  return new EmbedBuilder()
    .setTitle('üßü‚Äç‚ôÇÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Zombie ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ!')
    .setDescription('‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Zombie ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡πà‡∏°!')
    .setColor('#FFA500');
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ
function createButtonRows() {
  const firstRow = new ActionRowBuilder().addComponents(
    ...getZombieList().slice(0, 3).map((zombie) =>
      new ButtonBuilder()
        .setCustomId(zombie.name)
        .setLabel(zombie.name)
        .setStyle(ButtonStyle.Primary)
    ),
    new ButtonBuilder().setCustomId('random').setLabel('üîÑ ‡∏™‡∏∏‡πà‡∏°').setStyle(ButtonStyle.Success)
  );

  const secondRow = new ActionRowBuilder().addComponents(
    new ButtonBuilder().setCustomId('boss').setLabel('üíÄ Boss Zombie').setStyle(ButtonStyle.Danger),
    new ButtonBuilder().setCustomId('cancel').setLabel('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å').setStyle(ButtonStyle.Danger)
  );

  return [firstRow, secondRow];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°
function getSelectedZombie(customId) {
  if (customId === 'random') return getRandomZombie();
  if (customId === 'boss') return getBossZombie();
  return getZombieByName(customId);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
async function startBattle(message, user, zombie) {
  let userHp = 100;
  let zombieHp = zombie.hp;
  let turnCounter = 0;
  const battleMessage = await message.channel.send({
    embeds: [createBattleEmbed(user.username, zombie, userHp, zombieHp, '‚öîÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô! ‚öîÔ∏è')],
  });

  while (userHp > 0 && zombieHp > 0) {
    turnCounter++;
    const userAttack = calculateDamage(userHp, 5, 20);
    const zombieAttack = calculateDamage(turnCounter, 5, 20);

    userHp = Math.max(userHp - zombieAttack, 0);
    zombieHp = Math.max(zombieHp - userAttack, 0);

    let battleText = `${user.username} ‡πÇ‡∏à‡∏°‡∏ï‡∏µ ${zombie.name} ‚öîÔ∏è (-${userAttack} HP)\n${zombie.name} ‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ! üßü‚Äç‚ôÇÔ∏è (-${zombieAttack} HP)`;

    if (Math.random() < 0.15) {
      battleText += `\n‚ö° ‡∏ü‡πâ‡∏≤‡∏ú‡πà‡∏≤! ‡∏ó‡∏±‡πâ‡∏á ${user.username} ‡πÅ‡∏•‡∏∞ ${zombie.name} ‡∏ñ‡∏π‡∏Å‡πÇ‡∏à‡∏°‡∏ï‡∏µ! ‚ö°`;
      userHp = Math.max(userHp - 10, 0);
      zombieHp = Math.max(zombieHp - 10, 0);
    }

    if (Math.random() < 0.1) {
      battleText += `\nüî• ${user.username} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ü‡∏û‡∏¥‡πÄ‡∏®‡∏©! ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏•‡∏±‡∏á‡πÇ‡∏à‡∏°‡∏ï‡∏µ! üî•`;
    }

    if (Math.random() < 0.1) {
      battleText += `\nüõ°Ô∏è ${zombie.name} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏£‡∏≤‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏•‡∏±‡∏á‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô! üõ°Ô∏è`;
      zombieHp = Math.min(zombieHp + 10, zombie.hp);
    }

    if (zombie.name === 'Boss Zombie') {
      battleText += `\nüíÄ ${zombie.name} ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©: ${zombie.specialAbility}! üíÄ`;
      userHp = Math.max(userHp - 15, 0);
    }

    await battleMessage.edit({
      embeds: [createBattleEmbed(user.username, zombie, userHp, zombieHp, battleText)],
    });
    await new Promise((resolve) => setTimeout(resolve, 2000));
  }

  await battleMessage.edit({
    embeds: [
      createBattleEmbed(
        user.username,
        zombie,
        userHp,
        zombieHp,
        userHp > 0
          ? `üéâ ${user.username} ‡∏ä‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ! üéâ`
          : `üíÄ ${user.username} ‡∏û‡πà‡∏≤‡∏¢‡πÅ‡∏û‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö ${zombie.name}... üíÄ`
      ),
    ],
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Boss Zombie
function getBossZombie() {
  return {
    name: 'Boss Zombie',
    hp: 150,
    thumbnail: 'https://cdn.discordapp.com/attachments/1336344482005909575/1343107425695301642/66ffc9cdf73935e7dae8e1e0f3b86480.jpg',
    specialAbility: '‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î! ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô',
  };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ
function getRandomZombie() {
  const zombies = getZombieList();
  const isBossBattle = Math.random() < 0.1;
  return isBossBattle ? getBossZombie() : zombies[Math.floor(Math.random() * zombies.length)];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ
function getZombieByName(name) {
  return getZombieList().find((zombie) => zombie.name === name);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
function createBattleEmbed(user, zombie, userHp, zombieHp, description) {
  return new EmbedBuilder()
    .setTitle(`üí• ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ: ${user} vs ${zombie.name} üí•`)
    .setDescription(description)
    .setColor(userHp > 0 ? '#28a745' : '#dc3545')
    .setThumbnail(zombie.thumbnail || 'https://example.com/default-image.png')
    .addFields(
      { name: `${user} HP`, value: `**${userHp}**`, inline: true },
      { name: `${zombie.name} HP`, value: `**${zombieHp}**`, inline: true }
    );
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢
function calculateDamage(base, min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min) + Math.floor(base / 10);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ
function getZombieList() {
  return [
    { name: 'Zombie ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤', hp: 60, thumbnail: 'https://cdn.discordapp.com/attachments/1336344482005909575/1343106648046174293/eef0fd22941ee5b567796a0c244bdcb9.jpg' },
    { name: 'Zombie ‡∏Å‡∏•‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå', hp: 100, thumbnail: 'https://cdn.discordapp.com/attachments/1336344482005909575/1343107220262354964/64e72d558ced56bd1ab16bfbf808871a.jpg' },
    { name: 'Zombie ‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö', hp: 80, thumbnail: 'https://cdn.discordapp.com/attachments/1336344482005909575/1343107425695301642/66ffc9cdf73935e7dae8e1e0f3b86480.jpg' },
  ];
}
