// shopCommands.js
const { ActionRowBuilder, StringSelectMenuBuilder, EmbedBuilder } = require('discord.js');
const items = require('../items');  // ‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ
function showShop(message) {
    const selectMenu = new StringSelectMenuBuilder()
        .setCustomId('select_item')
        .setPlaceholder('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠')
        .addOptions(
            items.map(item => ({
                label: `${item.name} - ${item.price} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`,
                value: item.id,
                description: item.description,
                emoji: 'üõí',
            }))
        );

    const row = new ActionRowBuilder().addComponents(selectMenu);

    const embed = new EmbedBuilder()
        .setColor('#28a745')
        .setTitle('üåü ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤! üåü')
        .setDescription('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á:')
        .addFields(
            items.map(item => ({
                name: `**${item.name}** - ${item.price} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`,
                value: `*${item.description}*`,
                inline: true
            }))
        )
        .setFooter({ text: '‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏•‡∏≠‡∏î 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á!' })
        .setTimestamp()
        .setImage('https://cdn.discordapp.com/attachments/1336344467178917908/1337042992564932754/a023595a6a0b3ade26fdf39f0b1ce703.gif'); // GIF

    message.channel.send({
        embeds: [embed],
        components: [row]
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
async function handlePurchase(interaction, userBalance) {
    const itemId = interaction.values[0];
    const item = items.find(i => i.id === itemId);
    const userCoins = userBalance[interaction.user.id] || 0;

    const embed = new EmbedBuilder()
        .setColor('#28a745')
        .setTitle('üõçÔ∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ üõçÔ∏è')
        .setDescription(`‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ **${item.name}** ‡∏£‡∏≤‡∏Ñ‡∏≤ **${item.price}** ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`)
        .addFields(
            { name: '‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', value: `${userCoins} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`, inline: true },
            { name: '‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠', value: `${userCoins - item.price} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`, inline: true }
        )
        .setFooter({ text: '‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠' })
        .setTimestamp()
        .setImage(item.image);

    await interaction.reply({
        content: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á',
        embeds: [embed],
        ephemeral: true
    });

    const filter = (response) => response.user.id === interaction.user.id && ['yes', 'no'].includes(response.content.toLowerCase());
    const collector = interaction.channel.createMessageCollector({ filter, time: 15000 });

    collector.on('collect', async (response) => {
        if (response.content.toLowerCase() === 'yes') {
            if (userCoins >= item.price) {
                userBalance[interaction.user.id] = userCoins - item.price;
                await response.reply(`üéâ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ã‡∏∑‡πâ‡∏≠ **${item.name}** ‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${item.price} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç! ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${userBalance[interaction.user.id]} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç.`);
            } else {
                await response.reply(`‚ùå ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©, ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ **${item.name}**.`);
            }
        } else if (response.content.toLowerCase() === 'no') {
            await response.reply(`üö´ ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ **${item.name}** ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å.`);
        }
        collector.stop();
    });
}

module.exports = { showShop, handlePurchase };
