const { EmbedBuilder } = require('discord.js');

const userStats = {};
const cooldowns = new Map();
const inventory = {};

module.exports = {
    name: 'fight',
    description: '‡∏ï‡∏µ‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•',

    execute(message, userBalance) {
        const userId = message.author.id;

        // üî• ‡∏•‡∏î‡∏Ñ‡∏π‡∏•‡∏î‡∏≤‡∏ß‡∏ô‡πå‡∏à‡∏≤‡∏Å 10s ‚Üí 5s
        const cooldownTime = 5 * 1000;
        if (cooldowns.has(userId)) {
            const lastUsed = cooldowns.get(userId);
            if (Date.now() - lastUsed < cooldownTime) {
                return message.reply(`‚è≥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏µ‡∏Å ${((cooldownTime - (Date.now() - lastUsed)) / 1000).toFixed(1)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`);
            }
        }
        cooldowns.set(userId, Date.now());

        if (!userStats[userId]) {
            userStats[userId] = { hp: 150, exp: 0, level: 1, maxHp: 150, attackBonus: 15 };
            inventory[userId] = [];
        }
        let { hp, exp, level, maxHp, attackBonus } = userStats[userId];

        if (hp <= 0) {
            return message.reply('üíÄ ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏´‡∏°‡∏î! ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ü‡∏∑‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô!');
        }

        const monsters = [
            { name: 'Goblin', health: 50, attack: 5, reward: 20, exp: 25 },
            { name: 'Orc', health: 100, attack: 7, reward: 40, exp: 55 },
            { name: 'Dragon', health: 200, attack: 12, reward: 100, exp: 120 },
            { name: 'Dark Knight (BOSS)', health: 500, attack: 20, reward: 300, exp: 250, rareDrop: 'Legendary Sword' }
        ];

        const monster = monsters[Math.floor(Math.random() * monsters.length)];
        let userCoins = userBalance[userId] || 0;

        // üî• ‡∏õ‡∏£‡∏±‡∏ö‡∏î‡∏≤‡πÄ‡∏°‡∏à‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏à‡∏≤‡∏Å 30 ‚Üí 35 ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Ñ‡∏£‡∏¥‡∏ï‡∏¥‡∏Ñ‡∏≠‡∏•‡πÄ‡∏õ‡πá‡∏ô 20%
        let userAttack = Math.floor(Math.random() * 40) + 35 + attackBonus;
        let monsterAttack = Math.floor(Math.random() * monster.attack) + (monster.attack / 3);

        if (Math.random() < 0.20) {
            userAttack *= 2;
        }

        let resultMessage = '';
        let embedColor = '#FF0000';

        if (userAttack >= monster.health) {
            let rewardCoins = Math.floor(monster.reward * 1.5);
            userCoins += rewardCoins;
            exp += Math.floor(monster.exp * 1.5);
            userBalance[userId] = userCoins;

            resultMessage = `üéâ ‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞ **${monster.name}**! ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö **${rewardCoins}** üí∞ ‡πÅ‡∏•‡∏∞ **${exp}** XP!`;

            if (exp >= level * 50) {
                level += 1;
                exp = 0;
                maxHp += 15;
                hp = maxHp;
                resultMessage += `\nüÜô **‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏õ‡πÄ‡∏õ‡πá‡∏ô ${level}**! ‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô **${maxHp} HP**!`;
            }
            
            if (monster.rareDrop && Math.random() < 0.15) {
                inventory[userId].push(monster.rareDrop);
                resultMessage += `\nüéÅ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏´‡∏≤‡∏¢‡∏≤‡∏Å: **${monster.rareDrop}**!`;
            }
            
            embedColor = '#28a745';
        } else {
            hp -= monsterAttack;
            if (hp <= 0) {
                hp = 0;
                resultMessage = `üíÄ ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ **${monster.name}** ‡πÅ‡∏•‡∏∞‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏´‡∏°‡∏î!`;
            } else {
                resultMessage = `üíî ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ **${monster.name}**! ‡πÇ‡∏î‡∏ô‡πÇ‡∏à‡∏°‡∏ï‡∏µ **-${monsterAttack} HP** ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ **${hp} HP**`;
            }
        }

        userStats[userId] = { hp, exp, level, maxHp, attackBonus };

        if (Math.random() < 0.25 && hp > 0) {
            let healAmount = Math.floor(Math.random() * 25) + 20;
            hp += healAmount;
            if (hp > maxHp) hp = maxHp;
            resultMessage += `\nüíñ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö **‡∏¢‡∏≤‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π ${healAmount} HP!** ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ ${hp} HP`;
            userStats[userId].hp = hp;
        }

        const fightEmbed = new EmbedBuilder()
            .setColor(embedColor)
            .setTitle(`‚öîÔ∏è ‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏Å‡∏±‡∏ö ${monster.name}`)
            .setDescription(resultMessage)
            .addFields(
                { name: 'üõ°Ô∏è ‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå', value: monster.name, inline: true },
                { name: '‚ù§Ô∏è HP ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', value: `${hp}/${maxHp} HP`, inline: true },
                { name: 'üí∞ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ', value: `${userCoins} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`, inline: true },
                { name: 'üé≤ ‡∏Å‡∏≤‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ', value: `‡∏Ñ‡∏∏‡∏ì‡πÇ‡∏à‡∏°‡∏ï‡∏µ: ${userAttack} \n ‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÇ‡∏à‡∏°‡∏ï‡∏µ: ${monsterAttack}`, inline: false },
                { name: 'üÜô ‡πÄ‡∏•‡πÄ‡∏ß‡∏•', value: `**Lv. ${level}** (${exp}/ ${level * 50} XP)`, inline: false }
            )
            .setFooter({ text: '‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á!' })
            .setTimestamp();

        message.reply({ embeds: [fightEmbed] });
    },
};
